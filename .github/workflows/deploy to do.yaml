name: CI/CD workflow

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        
    steps: 
      - name: Check Out Repo
        uses: actions/checkout@v2
    # login to dockerhub
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    # install doctl
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
    # setup terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Terraform part workflow
      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan 
        run: terraform plan -var "do_token=${secret}"
        env:
          secret: ${{ secrets.DIGITALOCEAN_TOKEN }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply  -var "do_token=${secret}" -auto-approve 
        env:
          secret: ${{ secrets.DIGITALOCEAN_TOKEN }}
    # install kubectl
      - name: Set up kubectl
        uses: matootie/dokube@v1.3.4
        with:
          personalAccessToken: ${{ secrets.DIGITALOCEAN_TOKEN }}
          clusterName: koval
    # test conection node digitalocean
      - name: Get nodes
        run: kubectl get nodes
    # save digitalocean config
      - name: Save digitalocean kubeconfig
        run: doctl kubernetes cluster kubeconfig save koval
    # helm
      - name: Helm tool installer
        uses: Azure/setup-helm@v1

      - run: helm repo add bitnami https://charts.bitnami.com/bitnami
       
      - name: run crart-releaser
        uses: helm/chart-releases-action@v1.1.0
        env:
          CR_TOKEN: "${{ secrets.DIGITALOCEAN_TOKEN }}"
      - run: helm install my-app deployment.yaml

     
        

 
      